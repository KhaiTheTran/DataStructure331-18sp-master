# Test load graph and Dijkstra's algorithm

#Load graph
loaded graph marveNodeComplexGraph

# check graph load
marveNodeComplexGraph contains: BRANDT JONES, RICHARD MILHO LIBRA/GUSTAV
the children of LIBRA/GUSTAV in marveNodeComplexGraph are: JONES, RICHARD MILHO0.500
the children of BRANDT in marveNodeComplexGraph are: JONES, RICHARD MILHO0.500
the children of JONES, RICHARD MILHO in marveNodeComplexGraph are: LIBRA/GUSTAV0.500 BRANDT0.500

# Test the order of Dijkstra's algorithm
# Test Dijkstra's algorithm shortest path from LIBRA/GUSTAV to BRANDT
path from LIBRA/GUSTAV to BRANDT:
LIBRA/GUSTAV to JONES, RICHARD MILHO with weight 0.500
JONES, RICHARD MILHO to BRANDT with weight 0.500
total cost: 1.000

# Test Dijkstra's algorithm shortest path from BRANDT to LIBRA/GUSTAV
path from BRANDT to LIBRA/GUSTAV:
BRANDT to JONES, RICHARD MILHO with weight 0.500
JONES, RICHARD MILHO to LIBRA/GUSTAV with weight 0.500
total cost: 1.000

# Test Dijkstra's algorithm shortest path from BRANDT to JONES,_RICHARD_MILHO
path from BRANDT to JONES, RICHARD MILHO:
BRANDT to JONES, RICHARD MILHO with weight 0.500
total cost: 0.500

# Test Dijkstra's algorithm shortest path from JONES,_RICHARD_MILHO to BRANDT
path from JONES, RICHARD MILHO to BRANDT:
JONES, RICHARD MILHO to BRANDT with weight 0.500
total cost: 0.500

# Test Dijkstra's algorithm shortest path from JONES,_RICHARD_MILHO to LIBRA/GUSTAV
path from JONES, RICHARD MILHO to LIBRA/GUSTAV:
JONES, RICHARD MILHO to LIBRA/GUSTAV with weight 0.500
total cost: 0.500

# Test Dijkstra's algorithm shortest path from LIBRA/GUSTAV to JONES,_RICHARD_MILHO
path from LIBRA/GUSTAV to JONES, RICHARD MILHO:
LIBRA/GUSTAV to JONES, RICHARD MILHO with weight 0.500
total cost: 0.500